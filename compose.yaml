services:
  server:
    build:
      context: .
    container_name: server_container
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres_container
    image: postgres:16.1-alpine3.18
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      GDATA: "/var/lib/postgresql/data"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "postgres@postgres.com"
      PGADMIN_DEFAULT_PASSWORD: "postgres"
      PGADMIN_CONFIG_SERVER_MODE: "True" # To allow running in desktop mode
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

volumes:
  db-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge
